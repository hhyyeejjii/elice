/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: igor-tkachenko (https://sketchfab.com/igor-tkachenko)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/couch-9167000859eb46258f8dc1ac15b55c40
title: Couch
*/
import ReactDOM from "react-dom";
import React, { Suspense, useEffect, useRef } from "react";
import { useLoader } from "@react-three/fiber";
import { GLTFLoader } from "three/examples/jsm/loaders/GLTFLoader";
import { Controls, useControl } from "react-three-gui";
import { OrbitControls, TransformControls } from "@react-three/drei";

// import React, { useRef } from 'react'
import { useGLTF } from "@react-three/drei";

export default function Model({ edit, onNOff }) {
  
  const orbit = useRef();
  const transform = useRef();
  const mode = useControl("mode", {
    type: "select",
    items: ["rotate", "translate"],
  });
  useEffect(() => {});
  const group = useRef()
  const { nodes, materials } = useGLTF('/couch.gltf')
  return (
    <>
    {onNOff ? 
      <TransformControls ref={transform} showZ={edit} showY={edit} showX={edit}>
    <group ref={group} dispose={null} scale={40}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <mesh geometry={nodes.Cube_0.geometry} material={materials.Material} receiveShadow castShadow/>
        <mesh geometry={nodes.Cube_1.geometry} material={materials['Material.001']} receiveShadow castShadow/>
      </group>
    </group>
    </TransformControls> : <></>
      }
    </>
  )
}

useGLTF.preload('/couch.gltf')
